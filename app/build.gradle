plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'org.androidaudioplugin.ports.lv2.aida_x'
    compileSdk = 34
    defaultConfig {
        applicationId "org.androidaudioplugin.ports.lv2.aida_x"
        minSdk = 29
        versionCode 1
        versionName libs.versions.aap.lv2.get()
        ndk {
            abiFilters "x86_64", "arm64-v8a"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        proguardFiles 'proguard-rules.pro'

        externalNativeBuild {
            cmake {
                // https://github.com/google/prefab/blob/bccf5a6a75b67add30afbb6d4f7a7c50081d2d86/api/src/main/kotlin/com/google/prefab/api/Android.kt#L243
                arguments "-DANDROID_STL=c++_shared", "-DAAP_ENABLE_ASAN=" + (enable_asan ? "1" : "0")
            }
        }
    }

    // see androidaudioplugin/build.gradle for details...
    ndkVersion libs.versions.ndk.get()

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
    buildFeatures {
        prefab true
    }
    packagingOptions{
        // for debugging and ASan settings
        //doNotStrip "*/*/*.so"
        if (enable_asan)
            jniLibs.useLegacyPackaging = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation libs.aap.lv2
    implementation libs.aap.core
    implementation libs.aap.ui.compose.app
    implementation libs.aap.ui.web
    androidTestImplementation libs.aap.testing
    //  If you want to test aap-core and aap-lv2 locally, switch to these local references
    //  (along with settings.gradle.kts changes)
    /*
    implementation project(":androidaudioplugin-lv2")
    implementation project(":androidaudioplugin")
    implementation project(":androidaudioplugin-ui-compose-app")
    implementation project(":androidaudioplugin-ui-web")
    androidTestImplementation project(":androidaudioplugin-testing")
     */

    testImplementation libs.junit
    androidTestImplementation libs.test.core
    androidTestImplementation libs.test.rules
    androidTestImplementation libs.test.runner
    androidTestImplementation libs.test.ext.junit
}
